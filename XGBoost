import pandas as pd
from sklearn.model_selection import train_test_split, RandomizedSearchCV
from xgboost import XGBClassifier

cols_to_encode = ['Sex','ChestPainType','RestingECG','ExerciseAngina','ST_Slope']
df = pd.get_dummies(df, columns=cols_to_encode)

drop_cols = ['ChestPainType_TA','RestingECG_Normal']
df = df.drop(columns=drop_cols)

X = df.drop('HeartDisease', axis=1)
y = df['HeartDisease']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)

param_dist = {
    'n_estimators': [100, 200, 300],
    'max_depth': [3, 5, 7, 10],
    'learning_rate': [0.01, 0.05, 0.1, 0.2],
    'subsample': [0.7, 0.8, 0.9, 1.0],
    'colsample_bytree': [0.7, 0.8, 1.0],
    'gamma': [0, 0.1, 0.2, 0.3],
    'min_child_weight': [1, 3, 5]
}


xgb = XGBClassifier(use_label_encoder=False, eval_metric='mlogloss', random_state=42)
random_search = RandomizedSearchCV(estimator=xgb, param_distributions=param_dist,
                                   n_iter=50, cv=5, verbose=1, n_jobs=-1)
random_search.fit(X_train, y_train)

best_model = random_search.best_estimator_

model = XGBClassifier(use_label_encoder=False, eval_metric='mlogloss', random_state=42)
model.fit(X_train, y_train) 

from sklearn.metrics import accuracy_score, confusion_matrix

y_pred = model.predict(X_test)

acc = accuracy_score(y_test, y_pred)

print("Accuracy:",acc)
